@model PostHost.Models.ContentViewModels

@{ 
    ViewBag.Title = "Upload Content";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>TestAddingBETTER</h2>

@using (Html.BeginForm(ViewContext.RouteData.GetRequiredString("action"), "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("PostedBy")
        @*<div class="form-group">
            @Html.LabelFor(model => model.PostedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostedBy, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.theContent.ImgURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.theContent.ImgURL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.theContent.ImgURL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="file">Upload Image:</label>
            <input type="file" name="file" id="file" style="width: 100%;" />
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.theContent.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.theContent.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.theContent.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.theContent.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.theContent.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.theContent.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Tags</label>
            <div class="col-md-10">

                @for (int i =0; i < Model.theTags.Count; i++)
                {
                    @Html.CheckBoxFor(m => m.theTags[i].ischecked) 
                    @Html.HiddenFor(m => m.theTags[i].slatedTitle)
                    @Html.HiddenFor(m => m.theTags[i].slatedId)
                    @Html.DisplayFor(m => m.theTags[i].slatedTitle) 
                }
                
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
